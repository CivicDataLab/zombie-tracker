{"version":3,"sources":["components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["TimeseriesLoader","windowWidth","window","innerWidth","width","viewBox","height","speed","cx","cy","r","Timeseries","lazy","React","memo","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","t","useTranslation","useSessionStorage","TIMESERIES_LOOKBACKS","BEGINNING","lookback","useLocalStorage","chartType","explorerElement","useRef","isVisible","useIsVisible","once","selectedRegion","useMemo","districts","districtName","selectedTimeseries","dates","regions","states","Object","keys","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","today","getIndiaYesterdayISO","pastDates","TWO_WEEKS","cutOffDate","formatISO","sub","parseIndiaDate","weeks","representation","MONTH","months","handleChange","useCallback","target","JSON","parse","value","resetDropdown","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","stringify","onChange","key","fallback","prevProps","currProps","forceRender","equal","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","rx"],"mappings":"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","file":"static/js/33.fd320601.chunk.js","sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 160 * 5;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACKS,\n  STATE_NAMES,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useMemo, useRef, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useSessionStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useSessionStorage(\n    'timeseriesLookback',\n    TIMESERIES_LOOKBACKS.BEGINNING\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(selectedTimeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (lookback === TIMESERIES_LOOKBACKS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (lookback === TIMESERIES_LOOKBACKS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [selectedTimeseries, timelineDate, lookback]);\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        {/* <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div> */}\n      </div>\n\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            {...{dates, chartType}}\n          />\n        </Suspense>\n      )}\n\n      {!isVisible && <div style={{height: '50rem'}} />}\n\n      {/*<div className=\"pills\">\n        {Object.values(TIMESERIES_LOOKBACKS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: lookback === option})}\n            onClick={() => setLookback(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeseriesExplorer, isEqual);\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}