{"version":3,"sources":["hooks/useResizeObserver.js","components/MapLegend.js","components/MapVisualizer.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","MapLegend","data","mapViz","mapScale","statistic","t","useTranslation","svgRef","useRef","wrapperRef","svg","select","getBoundingClientRect","width","height","MAP_VIZS","BUBBLES","transition","duration","D3_TRANSITION_DURATION","attr","selectAll","remove","text","domainMax","domain","join","d","yScale","copy","range","call","axisRight","tickSize","tickPadding","tickValues","tickFormat","format","style","g","color","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","x","tickAdjust","interpolate","n","Math","min","length","rangeRound","quantize","ramp","toDataURL","interpolator","Object","assign","interpolateRound","undefined","round","map","i","quantile","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","scaleBand","max","bandwidth","axisBottom","on","node","legend","capitalize","CHOROPLETH","Number","isInteger","formatNumber","className","MAP_LEGEND_HEIGHT","id","preserveAspectRatio","position","canvas","context","getContext","fillStyle","fillRect","getTotalStatistic","getStatistic","MapVisualizer","mapCode","mapView","regionHighlighted","changeMap","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","history","useHistory","geoData","useSWR","geoDataFile","file","json","suspense","revalidateOnFocus","statisticMax","useMemo","stateCodes","keys","filter","stateCode","includes","MAP_VIEWS","STATES","districts","values","districtData","statisticTotal","scaleSqrt","clamp","nice","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","colorInterpolator","path","geoPath","geoIdentity","fillColor","useCallback","STATE_CODES","properties","st_nm","district","stateData","strokeColor","alpha","STATISTIC_CONFIGS","features","topojson","objects","states","mapType","MAP_TYPES","COUNTRY","feature","state","obj","populateTexts","regionSelection","toTitleCase","onceTouchedRegion","T","update","exit","event","stopPropagation","STATE","push","window","innerWidth","sel","bind","requestIdleCallback","circlesData","districtName","value","DISTRICTS","UNKNOWN_DISTRICT_KEY","sort","featureA","featureB","centroid","meshStates","meshDistricts","stateName","STATE_NAMES","each","highlighted","this","parentNode","appendChild","Fragment","viewBox","classnames","colorInterpolationFilters","type"],"mappings":"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","file":"static/js/37.01ef5d4c.chunk.js","sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useResizeObserver';\nimport {capitalize, formatNumber} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport React, {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction MapLegend({data, mapViz, mapScale, statistic}) {\n  const {t} = useTranslation();\n\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    let {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (!width || !height)\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\n\n    if (!width || !height) return;\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat(format('0~s'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title: `${t(capitalize(statistic))} ${t('cases')}`,\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n    }\n  }, [t, dimensions, mapScale, mapViz, statistic]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  formatNumber,\n  getStatistic,\n  toTitleCase,\n} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\n// eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n} from 'd3-scale-chromatic';\nimport {select, event} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = (statistic) => {\n  switch (statistic) {\n    case 'confirmed':\n      return (t) => interpolateReds(t * 0.85);\n    case 'active':\n      return (t) => interpolateBlues(t * 0.85);\n    case 'recovered':\n      return (t) => interpolateGreens(t * 0.85);\n    case 'deceased':\n      return (t) => interpolateGreys(t * 0.85);\n    case 'tested':\n      return (t) => interpolatePurples(t * 0.85);\n    default:\n      return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nconst getTotalStatistic = (data, statistic) => {\n  return getStatistic(data, 'total', statistic);\n};\n\nfunction MapVisualizer({\n  mapCode,\n  mapView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    return mapView === MAP_VIEWS.STATES\n      ? max(stateCodes, (stateCode) =>\n          getTotalStatistic(data[stateCode], statistic)\n        )\n      : max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? max(Object.values(data[stateCode].districts), (districtData) =>\n                getTotalStatistic(districtData, statistic)\n              )\n            : 0\n        );\n  }, [data, mapView, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(data[mapCode], statistic);\n  }, [data, mapCode, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return scaleSequential(\n        [0, Math.max(1, statisticMax)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  const fillColor = useCallback(\n    (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      let m;\n      if (district) n = getTotalStatistic(districtData, statistic);\n      else n = getTotalStatistic(stateData, statistic);\n      if (district) m = (typeof districtData == 'undefined') ? 0 : 1;\n      else m = (typeof stateData == 'undefined') ? 0 : 1;\n      const color = (m == 0 ? \"#c4c2c2\" : (n === 0 ? '#ffffff00' : mapScale(n)));\n      return color;\n    },\n    [data, mapScale, statistic]\n  );\n\n  const strokeColor = useCallback(\n    (alpha) => {\n      return STATISTIC_CONFIGS[statistic].color + alpha;\n    },\n    [statistic]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap =\n      mapView === MAP_VIEWS.STATES\n        ? topojson.feature(geoData, geoData.objects.states).features\n        : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n        ? [\n            ...topojson.feature(geoData, geoData.objects.states).features,\n            ...topojson.feature(geoData, geoData.objects.districts).features,\n          ]\n        : topojson.feature(geoData, geoData.objects.districts).features;\n\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.CHOROPLETH) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getTotalStatistic(districtData, statistic);\n          else n = getTotalStatistic(stateData, statistic);\n\t  let m;\n     \t  if (district) m = (typeof districtData == 'undefined') ? 0 : 1;\n          else m = (typeof stateData == 'undefined') ? 0 : 1;\n          return ( m !== 0 ?\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\n            '% from ' +\n            toTitleCase(district ? district : state) : \"No data available\"\n          );\n        }\n      });\n    },\n    [mapViz, data, statistic, statisticTotal]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      {/* setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });*/}\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              {/* setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              }); */}\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('touchstart', (d) => {\n        if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = d;\n      })\n      .on('click', (d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/viz/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    populateTexts,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (mapView === MAP_VIEWS.STATES) {\n            feature.value = getTotalStatistic(stateData, statistic);\n          } else if (mapView === MAP_VIEWS.DISTRICTS) {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName)\n              feature.value = getTotalStatistic(districtData, statistic);\n            else\n              feature.value = getTotalStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n                statistic\n              );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all'),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (feature) => {\n        {/* setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName:\n            mapView === MAP_VIEWS.STATES\n              ? null\n              : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        }); */}\n      })\n      .on('touchstart', (feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n      })\n      .on('click', (feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .transition(T)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('r', (feature) => mapScale(feature.value));\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    mapView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    statistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [topojson.mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    mapView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    mapView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span>\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, mapViz, mapScale, statistic}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n"],"sourceRoot":""}