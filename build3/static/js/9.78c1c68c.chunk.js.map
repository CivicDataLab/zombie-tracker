{"version":3,"sources":["../node_modules/d3-shape/src/curve/monotone.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","components/Minigraphs.js"],"names":["sign","x","slope3","that","x2","y2","h0","_x1","_x0","h1","s0","_y1","_y0","s1","p","Math","min","abs","slope2","t","h","point","t0","t1","x0","y0","x1","y1","dx","_context","bezierCurveTo","MonotoneX","context","this","MonotoneY","ReflectContext","monotoneX","prototype","areaStart","_line","areaEnd","NaN","lineStart","_t0","_point","lineEnd","lineTo","closePath","y","moveTo","Object","create","call","pi","PI","tau","tauEpsilon","Path","_","path","constructor","quadraticCurveTo","arcTo","r","x21","y21","x01","y01","l01_2","Error","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","cos","dy","sin","cw","da","rect","w","toString","Linear","pointX","pointY","defined","constant","curve","curveLinear","output","line","data","i","d","buffer","n","length","defined0","arguments","margin","React","memo","timeseries","timelineDate","date","refs","useRef","dates","useMemo","today","getIndiaYesterdayISO","pastDates","keys","filter","cutOffDate","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","useEffect","T","chartRight","chartBottom","xScale","scaleTime","clamp","domain","range","current","forEach","ref","index","pathLength","svg","select","statistic","PRIMARY_STATISTICS","color","STATISTIC_CONFIGS","dailyMaxAbs","max","getStatistic","yScale","scaleLinear","linePath","curveMonotoneX","selectAll","join","enter","append","attr","getTotalLength","transition","delay","duration","update","attrTween","previous","interpolatePath","style","className","map","key","classnames","el","width","height","viewBox","preserveAspectRatio","prevProps","currProps","forceRender","equal","stateCode"],"mappings":"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","file":"static/js/9.78c1c68c.chunk.js","sourcesContent":["function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {\n  MINIGRAPH_LOOKBACK_DAYS,\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\n// eslint-disable-next-line\nimport {transition} from 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef, useMemo} from 'react';\n\n// Dimensions\nconst [width, height] = [100, 75];\nconst margin = {top: 10, right: 10, bottom: 2, left: 5};\n\nfunction Minigraphs({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n    const cutOffDate = formatISO(\n      subDays(parseIndiaDate(today), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDate);\n  }, [timeseries, timelineDate]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain(T ? [parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])] : [])\n      .range([margin.left, chartRight]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = select(ref);\n      const statistic = PRIMARY_STATISTICS[index];\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      const dailyMaxAbs = max(dates, (date) =>\n        Math.abs(getStatistic(timeseries[date], 'total', statistic))\n      );\n\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([-dailyMaxAbs, dailyMaxAbs])\n        .range([chartBottom, margin.top]);\n\n      const linePath = line()\n        .curve(curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getStatistic(timeseries[date], 'total', statistic))\n        );\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', linePath)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = select(this).attr('d');\n                const current = linePath(date);\n                return interpolatePath(previous, current);\n              })\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getStatistic(timeseries[date], 'delta', statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n        );\n    });\n  }, [dates, timeseries]);\n\n  return (\n    <div className=\"Minigraph\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div key={statistic} className={classnames('svg-parent')}>\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Minigraphs, isEqual);\n"],"sourceRoot":""}