{"version":3,"sources":["../../src/rpc-wrapper.js","../node_modules/react-use/esm/useLongPress.js","../../src/utils/errors.ts","../../src/utils/common.ts","../../src/types/types-internal.ts","../../src/utils/plugins.ts","../../src/core/scope.ts","../../src/core/finalize.ts","../../src/core/proxy.ts","../../src/core/immerClass.ts","../../src/core/current.ts","../../src/immer.ts","../../src/utils/env.ts","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["worker","methods","c","callbacks","d","e","f","Object","Error","evt","document","method","Promise","id","a","type","params","preventDefault","event","isTouchEvent","touches","length","useLongPress","callback","_a","_b","_c","isPreventDefault","_d","delay","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","die","error","args","msg","join","isDraft","value","DRAFT_STATE","isDraftable","proto","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","undefined","autoFreeze_","peek","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","hasSymbol","Symbol","hasProxies","Reflect","iterator","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptor","source","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","apply","this","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","_this","hasError","then","arg1","arg2","patches","inversePatches","_this2","p","ip","createDraft","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","speed","style","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r"],"mappings":"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","file":"static/js/29.9ec2fb5f.chunk.js","sourcesContent":["export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n","/* eslint-disable */\nimport { useCallback, useRef } from 'react';\nvar isTouchEvent = function (event) {\n    return 'touches' in event;\n};\nvar preventDefault = function (event) {\n    if (!isTouchEvent(event))\n        return;\n    if (event.touches.length < 2 && event.preventDefault) {\n        event.preventDefault();\n    }\n};\nvar useLongPress = function (callback, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.isPreventDefault, isPreventDefault = _c === void 0 ? true : _c, _d = _b.delay, delay = _d === void 0 ? 300 : _d;\n    var timeout = useRef();\n    var target = useRef();\n    var start = useCallback(function (event) {\n        // prevent ghost click on mobile devices\n        if (isPreventDefault && event.target) {\n            event.target.addEventListener('touchend', preventDefault, { passive: false });\n            target.current = event.target;\n        }\n        timeout.current = setTimeout(function () { return callback(event); }, delay);\n    }, [callback, delay]);\n    var clear = useCallback(function () {\n        // clearTimeout and removeEventListener\n        timeout.current && clearTimeout(timeout.current);\n        if (isPreventDefault && target.current) {\n            target.current.removeEventListener('touchend', preventDefault);\n        }\n    }, []);\n    return {\n        onMouseDown: function (e) { return start(e); },\n        onTouchStart: function (e) { return start(e); },\n        onMouseUp: clear,\n        onMouseLeave: clear,\n        onTouchEnd: clear,\n    };\n};\nexport default useLongPress;\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t19: \"plugin not loaded\",\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return base.slice()\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\nexport function freeze(obj: any, deep: boolean): void {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(__DEV__ ? 18 : 19, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tplugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// finalize all children of the copy\n\t\teach(result as any, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop: string /* strictly not, but helps TS */, value) {\n\t\tstate.assigned_[prop] = true\n\t\tif (!state.modified_) {\n\t\t\tif (is(value, peek(latest(state), prop)) && value !== undefined)\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\t// This is a very special case, if the prop is a getter defined by the\n\t\t// prototype, we should invoke it with the draft as context!\n\t\tif (desc) return `value` in desc ? desc.value : desc.get?.call(state.draft_)\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = __DEV__ ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/* istanbul ignore next */\nfunction mini() {}\nexport const isMinified = mini.name !== \"mini\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}