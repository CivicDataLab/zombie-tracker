{"version":3,"sources":["../node_modules/react-use/esm/useUpdateEffect.js","../node_modules/react-use/esm/useFirstMountState.js","hooks/useStickySWR.js","components/Home.js","../../src/utils/errors.ts","../../src/utils/common.ts","../../src/types/types-internal.ts","../../src/utils/plugins.ts","../../src/core/scope.ts","../../src/core/finalize.ts","../../src/core/proxy.ts","../../src/core/immerClass.ts","../../src/core/current.ts","../../src/immer.ts","../../src/utils/env.ts"],"names":["useUpdateEffect","effect","deps","isFirstMount","isFirst","useRef","current","useFirstMountState","useEffect","useStickySWR","TimeseriesExplorer","lazy","MapExplorer","Table","Level","MapSwitcher","Periodpicker","Home","useState","stateCode","districtName","regionHighlighted","setRegionHighlighted","useLocalStorage","anchor","setAnchor","expandTable","setExpandTable","useSessionStorage","mapStatistic","setMapStatistic","date","location","useLocation","timeseries","require","pendency","homeRightElement","isVisible","useIsVisible","width","useWindowSize","message","setMessage","data","setData","ismap","setIsmap","togglemap","Fragment","Helmet","name","content","className","classnames","expanded","style","marginBottom","marginTop","alignSelf","background","color","borderRadius","onClick","class","aria-hidden","fallback","key","hash","height","ref","position","minHeight","die","error","args","msg","Error","length","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","undefined","autoFreeze_","peek","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","hasSymbol","Symbol","hasProxies","Reflect","iterator","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptor","source","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","apply","this","e","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","_this","hasError","Promise","then","arg1","arg2","patches","inversePatches","_this2","p","ip","createDraft","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_"],"mappings":"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","file":"static/js/21.3e260d60.chunk.js","sourcesContent":["/* eslint-disable */\nimport { useEffect } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nvar useUpdateEffect = function (effect, deps) {\n    var isFirstMount = useFirstMountState();\n    useEffect(function () {\n        if (!isFirstMount) {\n            return effect();\n        }\n    }, deps);\n};\nexport default useUpdateEffect;\n","import { useRef } from 'react';\nexport function useFirstMountState() {\n    var isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n","import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import {API_ROOT_URL} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport useStickySWR from '../hooks/useStickySWR';\nimport {fetcher} from '../utils/commonFunctions';\nimport CaseBarGraph from './CaseBarGraph';\nimport $ from 'jquery'; \n\nimport classnames from 'classnames';\nimport React, {useState, useRef, lazy, Suspense, useCallback} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useLocalStorage, useSessionStorage, useWindowSize} from 'react-use';\n\nconst TimeseriesExplorer = lazy(() => import('./TimeseriesExplorer'));\nconst MapExplorer = lazy(() => import('./MapExplorer'));\nconst Actions = lazy(() => import('./Actions'));\nconst Table = lazy(() => import('./Table'));\nconst Minigraphs = lazy(() => import('./Minigraphs'));\nconst Footer = lazy(() => import('./Footer'));\nconst Search = lazy(() => import('./Search'));\nconst Level = lazy(() => import('./Level'));\nconst MapSwitcher = lazy(() => import('./MapSwitcher'));\nconst StateHeader = lazy(() => import('./StateHeader'));\nconst Periodpicker = lazy(() => import('./Periodpicker'));\n\n\nfunction Home() {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor, setAnchor] = useLocalStorage('anchor', null);\n  const [expandTable, setExpandTable] = useLocalStorage('expandTable', false);\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'pending'\n  );\n  const [date, setDate] = useState('');\n  const location = useLocation();\n\n\n  const timeseries = require('../data/timeseries_india.json');\n  const pendency = require('../data/case_pendency_india.json');\n\n  // alert(JSON.stringify(pendency))\n\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement);\n  const {width} = useWindowSize();\n\n  const [message, setMessage] = useState(\"Total\");\n  const [data, setData] = useState(require('../data/data_total.json'));\n\n  const updateTotal = () => {\n      setMessage(\"Total\");\n      setData(require('../data/data_total.json'));\n  }\n\n  const updateBefore = () => {\n      setMessage(\"Before\");\n      setData(require('../data/data_pre.json'));\n      //alert(data['TT']['total']['total']);\n  }\n\n  const updateAfter = () => {\n      setMessage(\"After\");\n      setData(require('../data/data_post.json'));\n  }\n\n  const casetimeseries = [{\"name\":\"IT 66 AA\", \"value\":400},{\"name\":\"IPC Section 66A\", \"value\":300}, {\"name\":\"IT Act\", \"value\":250}, {\"name\":\"IPC 66 (A)\", \"value\":150}, {\"name\":\"IPC Section-66a\", \"value\":150}]\n  const lookback = 6;\n  const stateCode = 'TT';\n\n  const [ismap, setIsmap] = useState(true);\n  const togglemap = () => {\n      setIsmap(!ismap);\n      // alert (ismap);\n    }\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>66A Zombie Tracker</title>\n        <meta\n          name=\"title\"\n          content=\"66A Zombie Tracker: Latest Map and Case Count\"\n        />\n      </Helmet>\n\n      <div className=\"Home\">\n        <div className={classnames('home-left', {expanded: expandTable})}>\n\n\n          {/*<div className=\"header\">\n            <Suspense fallback={<div />}>\n              <Search />\n            </Suspense>\n          </div>*/}\n\n\t {/* <StateHeader data={data['TT']} stateCode={'TT'} /> */}\n\n\t  <div style={{marginBottom: '1rem', marginTop: '1rem'}}>\n\t\t <Periodpicker \n\t\t\t      {...{data, setData}}\n\t\t\t      {...{message, setMessage}}\n\t  /> </div>\n\n\t  <div style={{alignSelf:'center', marginBottom: '3rem'}}>\n\t\t<button className=\"btn btn-secondary\" style={message == \"Total\"? {background:'black', color:'white', width:'11rem', borderRadius:'20px'} : {width:'11rem', borderRadius:'20px'}} onClick={updateTotal}> Total </button>\n\t        <button className=\"btn btn-secondary\" style={message == \"Before\"? {background:'black', color:'white', width:'11rem', borderRadius:'20px'} : {width:'11rem', borderRadius:'20px'}} onClick={updateBefore}> Pre-Judgement </button>\n\t        <button className=\"btn btn-secondary\" style={message == \"After\"? {background:'black', color:'white', width:'11rem', borderRadius:'20px'} : {width:'11rem', borderRadius:'20px'}} onClick={updateAfter}> Post-Judgement </button>\n\t  </div>\n\n\t \n\n\t  <div style={{alignSelf:'left', marginBottom: '1rem'}}>\n\t\t<button className=\"btn btn-secondary\" style={ismap == false? {background:'black', color:'white'} : {}} onClick={togglemap}> <i class=\"fa fa-table\" aria-hidden=\"true\"></i></button>\n\t        <button className=\"btn btn-secondary\" style={ismap == true? {background:'black', color:'white'} : {}} onClick={togglemap}> <i class=\"fa fa-map\" aria-hidden=\"true\"></i> </button>\n\t  </div>\n\n          {!ismap && data && (\n            <Suspense fallback={<div />}>\n              <Table\n                key= {message}  \n                {...{\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  expandTable,\n                  setExpandTable,\n                }}\n              />\n            </Suspense>\n          )}\n\n\n          {ismap && (isVisible || location.hash) && (\n            <React.Fragment>\n              {data && (\n                <div\n                  className={classnames('map-container', {\n                    expanded: expandTable,\n                  })}\n                >\n\n                  <Suspense fallback={<div style={{height: '50rem'}} />}>\n                  \n                    <MapExplorer\n                      stateCode=\"TT\"\n                      {...{data}}\n                      {...{mapStatistic, setMapStatistic}}\n                      {...{regionHighlighted, setRegionHighlighted}}\n                      {...{anchor, setAnchor}}\n                      {...{expandTable}}\n                    />\n                  </Suspense>\n                </div>\n              )}\n\n\n            </React.Fragment>\n          )}\n\n\n          {/*<CaseBarGraph\n            timeseries={casetimeseries}\n          />*/}\n\n        </div>\n\n\n\n        <div\n          className={classnames('home-right', {expanded: expandTable})}\n          ref={homeRightElement}\n        >\n\n\t\t  <div style={{position: 'relative', marginTop: '1rem', marginBottom: '1rem'}}>\n\t\t    {data && (\n\t\t      <Suspense fallback={<div style={{height: '50rem'}} />}>\n\t\t        {width > 769 && (\n\t\t          <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n\t\t        )}\n\t\t        <Level key= {message} data={data['TT']} />\n\t\t      </Suspense>\n\t\t    )}\n                    {/* <Level key= {message} data={data['TT']} /> */}\n\t\t    {/*{timeseries && (\n\t\t      <Suspense fallback={<div style={{height: '50rem'}} />}>\n\t\t        <Minigraphs timeseries={timeseries['TT']?.dates} {...{date}} />\n\t\t      </Suspense>\n\t\t    )}*/}\n\t\t  </div>\n\n\n        </div>\n      </div>\n\n   <div className=\"Home\">\n\t<div className=\"home-left\" style={{width: '70rem', minHeight:'30rem'}}>\n\n\n\t   {timeseries && (\n\t\t<Suspense fallback={<div />}>\n\t\t  <TimeseriesExplorer\n\t\t    stateCode=\"TT\"\n\t\t    {...{\n\t\t      timeseries,\n                      pendency, \n\t\t      date,\n\t\t      regionHighlighted,\n\t\t      setRegionHighlighted,\n\t\t      anchor,\n\t\t      setAnchor,\n\t\t      expandTable,\n\t\t    }}\n\t\t  />\n\t\t</Suspense>\n\t    )}\n\n\n        </div>\n   </div>\n\n\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t19: \"plugin not loaded\",\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return base.slice()\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\nexport function freeze(obj: any, deep: boolean): void {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(__DEV__ ? 18 : 19, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tplugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// finalize all children of the copy\n\t\teach(result as any, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop: string /* strictly not, but helps TS */, value) {\n\t\tstate.assigned_[prop] = true\n\t\tif (!state.modified_) {\n\t\t\tif (is(value, peek(latest(state), prop)) && value !== undefined)\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\t// This is a very special case, if the prop is a getter defined by the\n\t\t// prototype, we should invoke it with the draft as context!\n\t\tif (desc) return `value` in desc ? desc.value : desc.get?.call(state.draft_)\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = __DEV__ ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/* istanbul ignore next */\nfunction mini() {}\nexport const isMinified = mini.name !== \"mini\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n"],"sourceRoot":""}