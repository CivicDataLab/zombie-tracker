{"version":3,"sources":["hooks/useResizeObserver.js","../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../node_modules/d3-array/src/min.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/point.js","components/Trendbar.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","ResizeObserverBoxOptions","resizeObservers","msg","trigger","DOMRectReadOnly","x","y","width","height","this","top","left","bottom","right","Object","freeze","prototype","toJSON","_a","fromRect","rectangle","isSVG","target","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","length","isElement","obj","scope","ownerDocument","defaultView","Element","global","window","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","calculateBoxSizes","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","ro","activeTargets","ot","targetDepth","push","lastReportedSize","callback","call","splice","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","some","event","ErrorEvent","message","document","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","characterData","textContent","watching","observerConfig","attributes","childList","subtree","events","time","timeout","Date","now","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","until","elementsHaveResized","start","requestAnimationFrame","stop","body","addEventListener","name","disconnect","removeEventListener","updateCount","n","ResizeObservation","CONTENT_BOX","tagName","type","isReplacedElement","display","ResizeObserverDetail","observerMap","getObservationIndex","i","ResizeObserverController","connect","detail","options","firstObservation","box","lastObservation","indexOf","slice","arguments","TypeError","toString","min","values","valueof","undefined","value","source","sourceEvent","changedTouches","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","margin","React","memo","timeseries","dates","chartType","t","useTranslation","refs","useRef","wrapperRef","highlightedDate","setHighlightedDate","getBarWidth","useCallback","T","axisWidth","chartRight","chartBottom","barWidth","xScale","scaleTime","clamp","domain","parseIndiaDate","range","numTicksX","xAxis","g","attr","axisBottom","ticks","tickFormat","date","formatDate","xAxis2","yScale","tickValues","tickSize","select","style","yAxis","axisRight","tickPadding","mousemove","xm","mouse","invert","isNaN","bisectDate","bisector","dateLeft","dateRight","mouseout","transition","duration","D3_TRANSITION_DURATION","statistic","TRENDBAR_STATISTICS","scaleLinear","getStatistic","max","nice","color","STATISTIC_CONFIGS","selectAll","remove","data","join","enter","append","on","getStatisticDelta","deltaToday","yesterday","formatISO","subDays","representation","trail","useMemo","styles","map","element","animationDelay","Fragment","className","statisticConfig","key","classnames","marginRight","capitalize","ts_displayName","formatNumber","format","preserveAspectRatio","prevProps","currProps","equal","regionHighlighted","stateCode","districtName"],"mappings":"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","file":"static/js/23.4b0f90e5.chunk.js","sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = [boxes.borderBoxSize];\n        this.contentBoxSize = [boxes.contentBoxSize];\n        this.devicePixelContentBoxSize = [boxes.devicePixelContentBoxSize];\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import {\n  D3_TRANSITION_DURATION,\n  STATISTIC_CONFIGS,\n  TIMESERIES_STATISTICS,\n  TRENDBAR_STATISTICS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useResizeObserver';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {min, max, bisector} from 'd3-array';\nimport {axisBottom, axisRight} from 'd3-axis';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select, mouse} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\n// eslint-disable-next-line\nimport {transition} from 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useEffect, useRef, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\n\n// Chart margins\nconst margin = {top: 15, right: 35, bottom: 25, left: 25};\n\nfunction Trendbar({timeseries, dates, chartType}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const [highlightedDate, setHighlightedDate] = useState();\n\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  const getBarWidth = useCallback(() => {\n    const T = dates.length;\n    // Dimensions\n    const {width} = dimensions || wrapperRef.current.getBoundingClientRect();\n    // Chart extremes\n    const chartRight = width - margin.right;\n    // Bar widths\n    const axisWidth = chartRight - margin.left;\n    return Math.min(4, axisWidth / (1.25 * T));\n  }, [dates.length, dimensions]);\n\n  useEffect(() => {\n    const T = dates.length;\n    // Dimensions\n    const {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n    // Chart extremes\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barWidth = getBarWidth();\n\n    // Buffer space along y-axis\n    const yBufferTop = 1.2;\n    const yBufferBottom = 1.1;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain(T ? [parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])] : [])\n      .range([margin.left, chartRight]);\n\n    // Number of x-axis ticks\n    const numTicksX = width < 480 ? 4 : 7;\n\n    const xAxis = (g) =>\n      g.attr('class', 'x-axis').call(\n        axisBottom(xScale)\n          .ticks(numTicksX)\n          .tickFormat((date) => formatDate(date, 'yyyy'))\n      );\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translateY(${yScale(0)}px)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n  \n    const yAxis = (g, yScale) =>\n      g\n        .attr('class', 'y-axis')\n        .call(axisRight(yScale).ticks(4, '0~s').tickPadding(4));\n\n    function mousemove() {\n      const xm = mouse(this)[0];\n      const date = xScale.invert(xm);\n      if (!isNaN(date)) {\n        const bisectDate = bisector((date) => parseIndiaDate(date)).left;\n        const index = bisectDate(dates, date, 1);\n        const dateLeft = dates[index - 1];\n        const dateRight = dates[index];\n        setHighlightedDate(\n          date - parseIndiaDate(dateLeft) < parseIndiaDate(dateRight) - date\n            ? dateLeft\n            : dateRight\n        );\n      }\n    }\n\n    function mouseout() {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    refs.current.forEach((ref, i) => {\n      const svg = select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      const statistic = TRENDBAR_STATISTICS[i];\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([\n          yBufferBottom *\n            Math.min(\n              0,\n              min(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n            ),\n          Math.max(\n            1,\n            yBufferTop *\n              max(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n          ),\n        ])\n        .nice(4)\n        .range([chartBottom, margin.top]);\n\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      /* X axis */\n      svg\n        .select('.x-axis')\n        .style('transform', `translateY(${chartBottom}px)`)\n        .transition(t)\n        .call(xAxis);\n\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n      /* Y axis */\n      svg\n        .select('.y-axis')\n        .style('transform', `translateX(${chartRight}px)`)\n        .transition(t)\n        .call(yAxis, yScale);\n\n      /* Path dots */\n      {/*svg\n        .selectAll('circle')\n        .data(dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('fill', color)\n            .attr('stroke', color)\n            .attr('cy', chartBottom)\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        )\n        .transition(t)\n        .attr('r', barWidth / 2)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) =>\n          yScale(getStatistic(timeseries[date], chartType, statistic))\n        ); */}\n\n      /* Path bars */\n      svg.selectAll('rect').remove();\n      svg\n        .selectAll('rect')\n        .data(dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('fill', color)\n            .attr('stroke', color)\n            .attr('y', (date) => yScale(getStatistic(timeseries[date], chartType, statistic)) )\n            .attr('x', (date) => xScale(parseIndiaDate(date)))\n            .attr(\"width\", barWidth / 2)\n            .attr(\"height\", 0)\n        )\n        .transition(t)\n        .attr('height', (date) => chartBottom - yScale(getStatistic(timeseries[date], chartType, statistic)) \n        );       \n\n\n      /* divide */\n      svg.selectAll('line').remove();\n      svg.selectAll('divide')\n        .data([\"2015\"])\n\t.join((enter) =>\n\t  enter\n\t  .append('line')\n\t  .attr('fill', color)\n\t  .attr('stroke', color)\n          .style(\"stroke-dasharray\", \"1,1\")\n\t  .attr(\"y1\", 0)\n\t  .attr(\"y2\", 0)\n\t  .attr(\"x1\", (date) => xScale(parseIndiaDate(date)))\n\t  .attr(\"x2\", (date) => xScale(parseIndiaDate(date)))\n        )\n        .transition(t)\n\t  .attr(\"y1\", 0)\n\t  .attr(\"y2\", chartBottom)\n\t  .attr(\"x1\", (date) => xScale(parseIndiaDate(date)))\n\t  .attr(\"x2\", (date) => xScale(parseIndiaDate(date)))\n        ;\n\n\n      {/* if (chartType === 'total') {\n        svg\n          .selectAll('.stem')\n          .transition(t)\n          .attr('y1', yScale(0))\n          .attr('y2', yScale(0))\n          .remove();\n\n        const linePath = line()\n          .curve(curveMonotoneX)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y((date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n\n        let pathLength;\n\n        svg\n          .selectAll('.trend')\n          .data(T ? [dates] : [])\n          .join(\n            (enter) =>\n              enter\n                .append('path')\n                .attr('class', 'trend')\n                .attr('fill', 'none')\n                .attr('stroke', color + '50')\n                .attr('stroke-width', 4)\n                .attr('d', linePath)\n                .attr('stroke-dasharray', function () {\n                  return (pathLength = this.getTotalLength());\n                })\n                .call((enter) =>\n                  enter\n                    .attr('stroke-dashoffset', pathLength)\n                    .transition(t)\n                    .attr('stroke-dashoffset', 0)\n                ),\n            (update) =>\n              update\n                .attr('stroke-dasharray', null)\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = select(this).attr('d');\n                  const current = linePath(date);\n                  return interpolatePath(previous, current);\n                })\n          );\n      } else {\n        // DAILY TRENDS \n        svg.selectAll('.trend').remove();\n\n        svg\n          .selectAll('.stem')\n          .data(dates, (date) => date)\n          .join((enter) =>\n            enter\n              .append('line')\n              .attr('class', 'stem')\n              .attr('stroke-width', barWidth)\n              .attr('x1', (date) => xScale(parseIndiaDate(date)))\n              .attr('y1', chartBottom)\n              .attr('x2', (date) => xScale(parseIndiaDate(date)))\n              .attr('y2', chartBottom)\n          )\n          .transition(t)\n          .attr('stroke-width', barWidth)\n          .attr('x1', (date) => xScale(parseIndiaDate(date)))\n          .attr('y1', yScale(0))\n          .attr('x2', (date) => xScale(parseIndiaDate(date)))\n          .attr('y2', (date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n      } */}\n\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg\n        .on('mousemove', mousemove)\n        .on('touchmove', mousemove)\n        .on('mouseout', mouseout)\n        .on('touchend', mouseout);\n    });\n  }, [chartType, dimensions, getBarWidth, timeseries, dates]);\n\n  useEffect(() => {\n    const barWidth = getBarWidth();\n    refs.current.forEach((ref) => {\n      const svg = select(ref);\n      svg\n        .selectAll('rect')\n        .attr('width', (date) =>\n          date === highlightedDate ? barWidth : barWidth / 2\n        );\n    });\n  }, [highlightedDate, getBarWidth]);\n\n  const getStatisticDelta = useCallback(\n    (statistic) => {\n      if (!highlightedDate) return;\n      const deltaToday = getStatistic(\n        timeseries?.[highlightedDate],\n        'delta',\n        statistic\n      );\n      if (chartType === 'total') return deltaToday;\n\n      const yesterday = formatISO(subDays(parseIndiaDate(highlightedDate), 1), {\n        representation: 'date',\n      });\n      const deltaYesterday = getStatistic(\n        timeseries?.[yesterday],\n        'delta',\n        statistic\n      );\n      return deltaToday - deltaYesterday;\n    },\n    [timeseries, highlightedDate, chartType]\n  );\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"Timeseries\">\n        {TRENDBAR_STATISTICS.map((statistic, index) => {\n          const delta = getStatisticDelta(statistic, index);\n          const statisticConfig = STATISTIC_CONFIGS[statistic];\n          return (\n            <div\n              key={statistic}\n              className={classnames('svg-parent fadeInUp', `is-${statistic}`)}\n              ref={wrapperRef}\n              style={trail[index], {marginRight:'2%'}}\n            >\n              {highlightedDate && (\n                <div className={classnames('stats', `is-${statistic}`)}>\n                  <h5 className=\"title\">\n                    {t(capitalize(statisticConfig.ts_displayName))}\n                  </h5>\n                  <h5 className=\"title\">\n                    {formatDate(highlightedDate, 'yyyy')}\n                  </h5>\n                  <div className=\"stats-bottom\">\n                    <h2>\n                      {formatNumber(\n                        getStatistic(\n                          timeseries?.[highlightedDate],\n                          chartType,\n                          statistic\n                        ),\n                        statisticConfig.format !== 'short'\n                          ? statisticConfig.format\n                          : 'int',\n                        statistic\n                      )}\n                    </h2>\n                    {/*<h6>{`${delta > 0 ? '+' : ''}${formatNumber(\n                      delta,\n                      statisticConfig.format !== 'short'\n                        ? statisticConfig.format\n                        : 'int',\n                      statistic\n                    )}`}</h6> */}\n                  </div>\n                </div>\n              )}\n              <svg\n                ref={(element) => {\n                  refs.current[index] = element;\n                }}\n                preserveAspectRatio=\"xMidYMid meet\"\n              >\n                <g className=\"x-axis\" />\n                <g className=\"x-axis2\" />\n                <g className=\"y-axis\" />\n              </svg>\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Trendbar, isEqual);\n"],"sourceRoot":""}