{"version":3,"sources":["../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../node_modules/d3-array/src/min.js","../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/point.js","../node_modules/d3-scale/src/quantize.js"],"names":["ResizeObserverBoxOptions","resizeObservers","msg","trigger","DOMRectReadOnly","x","y","width","height","this","top","left","bottom","right","Object","freeze","prototype","toJSON","_a","fromRect","rectangle","isSVG","target","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","length","isElement","obj","scope","ownerDocument","defaultView","Element","global","window","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","forEach","ro","activeTargets","entries","ot","entry","targetDepth","push","lastReportedSize","callback","call","observer","splice","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","some","event","ErrorEvent","message","document","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","observe","characterData","textContent","watching","observerConfig","attributes","childList","subtree","events","time","timeout","Date","now","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","until","elementsHaveResized","start","requestAnimationFrame","stop","body","addEventListener","name","disconnect","removeEventListener","updateCount","n","ResizeObservation","CONTENT_BOX","tagName","type","isReplacedElement","display","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","i","ResizeObserverController","connect","detail","options","firstObservation","box","unobserve","index","lastObservation","indexOf","slice","ResizeObserver","arguments","TypeError","toString","min","values","valueof","undefined","value","exports","_defineProperty","key","defineProperty","enumerable","configurable","writable","_extends","assign","source","hasOwnProperty","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","decasteljau","points","t","decasteljauRecurse","newPoints","Array","reverse","pointsToCommand","command","x2","y2","x1","y1","splitCurve","commandStart","commandEnd","segmentCount","segments","remainingCurve","tIncrement","split","splitCurveAsPoints","map","commandTokenRegex","typeMap","M","L","H","V","C","S","Q","T","A","arrayOfLength","array","commandToString","concat","p","join","extend","commandsToExtend","referenceCommands","excludeSegment","numSegmentsToExtend","numReferenceSegments","segmentRatio","extended","reduce","accum","d","insertIndex","floor","addToPriorSegment","lastCommandCopies","copyCommand","splitSegment","unshift","makeCommands","commandArgs","tokens","match","commands","a","toLowerCase","interpolatePath","b","aCommands","bCommands","abs","interpolatedCommands","aCommand","bCommand","conversionMap","readFromBKeys","toUpperCase","aConverted","bKey","bValue","aValue","includes","convertToSameType","getOwnPropertyDescriptors","defineProperties","_objectSpread2","addZ","interpolatedCommand","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","arg","err","interpolatedString","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","factory","current","sourceEvent","changedTouches","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","quantize","unknown","x0","domain","range","scale","bisect","rescale","_","from","invertExtent","NaN","thresholds","copy","initRange","linearish"],"mappings":"iJAAA,ICAIA,EDAAC,EAAkB,GEAlBC,EAAM,iEDCV,SAAWF,GACPA,EAAwB,WAAiB,aACzCA,EAAwB,YAAkB,cAC1CA,EAAwB,yBAA+B,2BAH3D,CAIGA,IAA6BA,EAA2B,KEL3D,ICAIG,EDAAC,EAAmB,WACnB,SAASA,EAAgBC,EAAGC,EAAGC,EAAOC,GASlC,OARAC,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAKC,IAAMD,KAAKH,EAChBG,KAAKE,KAAOF,KAAKJ,EACjBI,KAAKG,OAASH,KAAKC,IAAMD,KAAKD,OAC9BC,KAAKI,MAAQJ,KAAKE,KAAOF,KAAKF,MACvBO,OAAOC,OAAON,MASzB,OAPAL,EAAgBY,UAAUC,OAAS,WAC/B,IAAIC,EAAKT,KACT,MAAO,CAAEJ,EADUa,EAAGb,EACPC,EADcY,EAAGZ,EACXI,IADoBQ,EAAGR,IACbG,MAD0BK,EAAGL,MACfD,OAD+BM,EAAGN,OAClBD,KADiCO,EAAGP,KACxBJ,MADsCW,EAAGX,MAC3BC,OAD2CU,EAAGV,SAGzIJ,EAAgBe,SAAW,SAAUC,GACjC,OAAO,IAAIhB,EAAgBgB,EAAUf,EAAGe,EAAUd,EAAGc,EAAUb,MAAOa,EAAUZ,SAE7EJ,EAnBY,GEAnBiB,EAAQ,SAAUC,GAAU,OAAOA,aAAkBC,YAAc,YAAaD,GAChFE,EAAW,SAAUF,GACrB,GAAID,EAAMC,GAAS,CACf,IAAIJ,EAAKI,EAAOG,UAAWlB,EAAQW,EAAGX,MAAOC,EAASU,EAAGV,OACzD,OAAQD,IAAUC,EAEtB,IAAIkB,EAAKJ,EAAQK,EAAcD,EAAGC,YAAaC,EAAeF,EAAGE,aACjE,QAASD,GAAeC,GAAgBN,EAAOO,iBAAiBC,SAEhEC,EAAY,SAAUC,GACtB,IAAId,EAAIQ,EACJO,EAAoF,QAA3EP,EAAoB,QAAdR,EAAKc,SAAwB,IAAPd,OAAgB,EAASA,EAAGgB,qBAAkC,IAAPR,OAAgB,EAASA,EAAGS,YAC5H,SAAUF,GAASD,aAAeC,EAAMG,UCZjCC,EAA2B,qBAAXC,OAAyBA,OAAS,GCIzDC,EAAQ,IAAIC,QACZC,EAAe,cACfC,EAAiB,eACjBC,EAAM,gBAAiBC,KAAKP,EAAOQ,WAAaR,EAAOQ,UAAUC,WACjEC,EAAiB,SAAUC,GAAS,OAAOC,WAAWD,GAAS,MAC/DE,EAAO,SAAUC,EAAYC,EAAWC,GAIxC,YAHmB,IAAfF,IAAyBA,EAAa,QACxB,IAAdC,IAAwBA,EAAY,QACpB,IAAhBC,IAA0BA,GAAc,GACrCvC,OAAOC,OAAO,CACjBoC,YAAaE,EAAcD,EAAYD,IAAe,EACtDC,WAAYC,EAAcF,EAAaC,IAAc,KAGzDE,EAAYxC,OAAOC,OAAO,CAC1BwC,0BAA2BL,IAC3BM,cAAeN,IACfO,eAAgBP,IAChBQ,YAAa,IAAItD,EAAgB,EAAG,EAAG,EAAG,KAE1CuD,EAAoB,SAAUrC,EAAQsC,GAEtC,QAD2B,IAAvBA,IAAiCA,GAAqB,GACtDrB,EAAMsB,IAAIvC,KAAYsC,EACtB,OAAOrB,EAAMuB,IAAIxC,GAErB,GAAIE,EAASF,GAET,OADAiB,EAAMwB,IAAIzC,EAAQgC,GACXA,EAEX,IAAIU,EAAKC,iBAAiB3C,GACtB4C,EAAM7C,EAAMC,IAAWA,EAAO6C,iBAAmB7C,EAAOG,UACxD2C,GAAiBzB,GAAuB,eAAjBqB,EAAGK,UAC1BhB,EAAcX,EAAeE,KAAKoB,EAAGM,aAAe,IACpDC,GAAuBL,GAAOzB,EAAaG,KAAKoB,EAAGQ,WAAa,IAChEC,GAAyBP,GAAOzB,EAAaG,KAAKoB,EAAGU,WAAa,IAClEC,EAAaT,EAAM,EAAInB,EAAeiB,EAAGW,YACzCC,EAAeV,EAAM,EAAInB,EAAeiB,EAAGY,cAC3CC,EAAgBX,EAAM,EAAInB,EAAeiB,EAAGa,eAC5CC,EAAcZ,EAAM,EAAInB,EAAeiB,EAAGc,aAC1CC,EAAYb,EAAM,EAAInB,EAAeiB,EAAGgB,gBACxCC,EAAcf,EAAM,EAAInB,EAAeiB,EAAGkB,kBAC1CC,EAAejB,EAAM,EAAInB,EAAeiB,EAAGoB,mBAE3CC,EAAoBP,EAAcF,EAClCU,EAAkBX,EAAaE,EAC/BU,GAHarB,EAAM,EAAInB,EAAeiB,EAAGwB,kBAGLP,EACpCQ,EAAqBV,EAAYI,EACjCO,EAAgCjB,EAA4BnD,EAAOM,aAAe6D,EAAqBnE,EAAOqE,aAAtD,EACxDC,EAA8BrB,EAA0BjD,EAAOK,YAAc4D,EAAuBjE,EAAOuE,YAAvD,EACpDC,EAAiB1B,EAAgBiB,EAAoBE,EAAuB,EAC5EQ,EAAkB3B,EAAgBkB,EAAkBG,EAAqB,EACzEO,EAAe9B,EAAMA,EAAI3D,MAAQwC,EAAeiB,EAAGzD,OAASuF,EAAiBF,EAC7EK,EAAgB/B,EAAMA,EAAI1D,OAASuC,EAAeiB,EAAGxD,QAAUuF,EAAkBL,EACjFQ,EAAiBF,EAAeX,EAAoBO,EAA6BL,EACjFY,EAAkBF,EAAgBX,EAAkBI,EAA+BD,EACnFW,EAAQtF,OAAOC,OAAO,CACtBwC,0BAA2BL,EAAKmD,KAAKC,MAAMN,EAAeO,kBAAmBF,KAAKC,MAAML,EAAgBM,kBAAmBlD,GAC3HG,cAAeN,EAAKgD,EAAgBC,EAAiB9C,GACrDI,eAAgBP,EAAK8C,EAAcC,EAAe5C,GAClDK,YAAa,IAAItD,EAAgB0E,EAAaH,EAAYqB,EAAcC,KAG5E,OADA1D,EAAMwB,IAAIzC,EAAQ8E,GACXA,GAEPI,EAAmB,SAAUlF,EAAQmF,EAAa7C,GAClD,IAAI1C,EAAKyC,EAAkBrC,EAAQsC,GAAqBJ,EAAgBtC,EAAGsC,cAAeC,EAAiBvC,EAAGuC,eAAgBF,EAA4BrC,EAAGqC,0BAC7J,OAAQkD,GACJ,KAAKzG,EAAyB0G,yBAC1B,OAAOnD,EACX,KAAKvD,EAAyB2G,WAC1B,OAAOnD,EACX,QACI,OAAOC,IC3EfmD,EACA,SAA6BtF,GACzB,IAAI8E,EAAQzC,EAAkBrC,GAC9Bb,KAAKa,OAASA,EACdb,KAAKiD,YAAc0C,EAAM1C,YACzBjD,KAAK+C,cAAgB,CAAC4C,EAAM5C,eAC5B/C,KAAKgD,eAAiB,CAAC2C,EAAM3C,gBAC7BhD,KAAK8C,0BAA4B,CAAC6C,EAAM7C,4BCP5CsD,EAAwB,SAAUC,GAClC,GAAItF,EAASsF,GACT,OAAOC,IAIX,IAFA,IAAIC,EAAQ,EACRC,EAASH,EAAKI,WACXD,GACHD,GAAS,EACTC,EAASA,EAAOC,WAEpB,OAAOF,GCPPG,EAA8B,WAC9B,IAAIC,EAAkBL,IAClBM,EAAY,GAChBpH,EAAgBqH,SAAQ,SAAyBC,GAC7C,GAAgC,IAA5BA,EAAGC,cAAc1F,OAArB,CAGA,IAAI2F,EAAU,GACdF,EAAGC,cAAcF,SAAQ,SAAuBI,GAC5C,IAAIC,EAAQ,IAAIf,EAAoBc,EAAGpG,QACnCsG,EAAcf,EAAsBa,EAAGpG,QAC3CmG,EAAQI,KAAKF,GACbD,EAAGI,iBAAmBtB,EAAiBkB,EAAGpG,OAAQoG,EAAGjB,aACjDmB,EAAcR,IACdA,EAAkBQ,MAG1BP,EAAUQ,MAAK,WACXN,EAAGQ,SAASC,KAAKT,EAAGU,SAAUR,EAASF,EAAGU,aAE9CV,EAAGC,cAAcU,OAAO,EAAGX,EAAGC,cAAc1F,YAEhD,IAAK,IAAIqG,EAAK,EAAGC,EAAcf,EAAWc,EAAKC,EAAYtG,OAAQqG,IAAM,EAErEJ,EADeK,EAAYD,MAG/B,OAAOf,GC5BPiB,EAAkC,SAAUrB,GAC5C/G,EAAgBqH,SAAQ,SAAyBC,GAC7CA,EAAGC,cAAcU,OAAO,EAAGX,EAAGC,cAAc1F,QAC5CyF,EAAGe,eAAeJ,OAAO,EAAGX,EAAGe,eAAexG,QAC9CyF,EAAGgB,mBAAmBjB,SAAQ,SAAuBI,GAC7CA,EAAGc,aACC3B,EAAsBa,EAAGpG,QAAU0F,EACnCO,EAAGC,cAAcK,KAAKH,GAGtBH,EAAGe,eAAeT,KAAKH,WCPvCe,EAAU,WACV,IAAIzB,EAAQ,EAEZ,IADAqB,EAAgCrB,GCLzB/G,EAAgByI,MAAK,SAAUnB,GAAM,OAAOA,EAAGC,cAAc1F,OAAS,MDOzEkF,EAAQG,IACRkB,EAAgCrB,GAKpC,OEbO/G,EAAgByI,MAAK,SAAUnB,GAAM,OAAOA,EAAGe,eAAexG,OAAS,MZDrD,WACzB,IAAI6G,EACsB,oBAAfC,WACPD,EAAQ,IAAIC,WAAW,QAAS,CAC5BC,QAAS3I,MAIbyI,EAAQG,SAASC,YAAY,UACvBC,UAAU,SAAS,GAAO,GAChCL,EAAME,QAAU3I,GAEpBoC,OAAO2G,cAAcN,GUAjBO,GAEGlC,EAAQ,GRdfK,EAAY,GAEZ8B,EAAiB,SAAUpB,GAC3B,IAAK5H,EAAS,CACV,IAAIiJ,EAAW,EACXC,EAAOP,SAASQ,eAAe,IAEnC,IAAIC,kBAAiB,WAAc,OANTlC,EAAUa,OAAO,GAAGZ,SAAQ,SAAUkC,GAAM,OAAOA,UAMtBC,QAAQJ,EADlD,CAAEK,eAAe,IAE9BvJ,EAAU,WAAckJ,EAAKM,YAAc,IAAMP,EAAWA,IAAaA,MAE7E/B,EAAUQ,KAAKE,GACf5H,KWTAyJ,EAAW,EAGXC,EAAiB,CAAEC,YAAY,EAAMJ,eAAe,EAAMK,WAAW,EAAMC,SAAS,GACpFC,EAAS,CACT,SACA,OACA,gBACA,eACA,iBACA,qBACA,QACA,UACA,UACA,YACA,YACA,WACA,OACA,SAEAC,EAAO,SAAUC,GAEjB,YADgB,IAAZA,IAAsBA,EAAU,GAC7BC,KAAKC,MAAQF,GAEpBG,GAAY,EAkEZC,EAAY,IAjEC,WACb,SAASC,IACL,IAAIC,EAAQhK,KACZA,KAAKiK,SAAU,EACfjK,KAAKkK,SAAW,WAAc,OAAOF,EAAMG,YA2D/C,OAzDAJ,EAAUxJ,UAAU6J,IAAM,SAAUV,GAChC,IAAIM,EAAQhK,KAEZ,QADgB,IAAZ0J,IAAsBA,EA/Bf,MAgCPG,EAAJ,CAGAA,GAAY,EACZ,ICxC4Bd,EDwCxBsB,EAAQZ,EAAKC,GCxCWX,EDyCR,WAChB,IAAIuB,GAAsB,EAC1B,IACIA,EAAsBtC,IAD1B,QAMI,GAFA6B,GAAY,EACZH,EAAUW,EAAQZ,KA7CMN,EA+CpB,OAEAmB,EACAN,EAAMI,IAAI,KAELV,EAAU,EACfM,EAAMI,IAAIV,GAGVM,EAAMO,UC1DtB7B,GAAe,WACX8B,sBAAsBzB,QD8D1BgB,EAAUxJ,UAAU4J,SAAW,WAC3BnK,KAAKyK,OACLzK,KAAKoK,OAETL,EAAUxJ,UAAUyI,QAAU,WAC1B,IAAIgB,EAAQhK,KACR+I,EAAK,WAAc,OAAOiB,EAAMxC,UAAYwC,EAAMxC,SAASwB,QAAQX,SAASqC,KAAMtB,IACtFf,SAASqC,KAAO3B,IAAOnH,EAAO+I,iBAAiB,mBAAoB5B,IAEvEgB,EAAUxJ,UAAUgK,MAAQ,WACxB,IAAIP,EAAQhK,KACRA,KAAKiK,UACLjK,KAAKiK,SAAU,EACfjK,KAAKwH,SAAW,IAAIsB,iBAAiB9I,KAAKkK,UAC1ClK,KAAKgJ,UACLQ,EAAO3C,SAAQ,SAAU+D,GAAQ,OAAOhJ,EAAO+I,iBAAiBC,EAAMZ,EAAME,UAAU,QAG9FH,EAAUxJ,UAAUkK,KAAO,WACvB,IAAIT,EAAQhK,KACPA,KAAKiK,UACNjK,KAAKwH,UAAYxH,KAAKwH,SAASqD,aAC/BrB,EAAO3C,SAAQ,SAAU+D,GAAQ,OAAOhJ,EAAOkJ,oBAAoBF,EAAMZ,EAAME,UAAU,MACzFlK,KAAKiK,SAAU,IAGhBF,EA/DM,IAkEbgB,EAAc,SAAUC,IACvB7B,GAAY6B,EAAI,GAAKlB,EAAUS,UAChCpB,GAAY6B,IACClB,EAAUW,QEzFvBQ,EAAqB,WACrB,SAASA,EAAkBpK,EAAQmF,GAC/BhG,KAAKa,OAASA,EACdb,KAAKgG,YAAcA,GAAezG,EAAyB2L,YAC3DlL,KAAKqH,iBAAmB,CACpB3E,WAAY,EACZC,UAAW,GAcnB,OAXAsI,EAAkB1K,UAAUwH,SAAW,WACnC,IAf4BlH,EAexB4B,EAAOsD,EAAiB/F,KAAKa,OAAQb,KAAKgG,aAAa,GAI3D,OAnB4BnF,EAgBJb,KAAKa,OAfzBD,EAAMC,IZUM,SAAUA,GAC9B,OAAQA,EAAOsK,SACX,IAAK,QACD,GAAoB,UAAhBtK,EAAOuK,KACP,MAER,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,MACD,OAAO,EAEf,OAAO,EYxBCC,CAAkBxK,IACkB,WAArC2C,iBAAiB3C,GAAQyK,UAcxBtL,KAAKqH,iBAAmB5E,GAExBzC,KAAKqH,iBAAiB3E,aAAeD,EAAKC,YACvC1C,KAAKqH,iBAAiB1E,YAAcF,EAAKE,WAK7CsI,EApBc,GCRrBM,EACA,SAA8BC,EAAgBlE,GAC1CtH,KAAK+G,cAAgB,GACrB/G,KAAK6H,eAAiB,GACtB7H,KAAK8H,mBAAqB,GAC1B9H,KAAKwH,SAAWgE,EAChBxL,KAAKsH,SAAWA,GCFpBmE,EAAc,IAAI1J,QAClB2J,EAAsB,SAAU5D,EAAoBjH,GACpD,IAAK,IAAI8K,EAAI,EAAGA,EAAI7D,EAAmBzG,OAAQsK,GAAK,EAChD,GAAI7D,EAAmB6D,GAAG9K,SAAWA,EACjC,OAAO8K,EAGf,OAAQ,GAERC,EAA4B,WAC5B,SAASA,KAgCT,OA9BAA,EAAyBC,QAAU,SAAUL,EAAgBlE,GACzD,IAAIwE,EAAS,IAAIP,EAAqBC,EAAgBlE,GACtDmE,EAAYnI,IAAIkI,EAAgBM,IAEpCF,EAAyB5C,QAAU,SAAUwC,EAAgB3K,EAAQkL,GACjE,IAAID,EAASL,EAAYpI,IAAImI,GACzBQ,EAAwD,IAArCF,EAAOhE,mBAAmBzG,OAC7CqK,EAAoBI,EAAOhE,mBAAoBjH,GAAU,IACzDmL,GAAoBxM,EAAgB4H,KAAK0E,GACzCA,EAAOhE,mBAAmBV,KAAK,IAAI6D,EAAkBpK,EAAQkL,GAAWA,EAAQE,MAChFlB,EAAY,GACZjB,EAAUK,aAGlByB,EAAyBM,UAAY,SAAUV,EAAgB3K,GAC3D,IAAIiL,EAASL,EAAYpI,IAAImI,GACzBW,EAAQT,EAAoBI,EAAOhE,mBAAoBjH,GACvDuL,EAAuD,IAArCN,EAAOhE,mBAAmBzG,OAC5C8K,GAAS,IACTC,GAAmB5M,EAAgBiI,OAAOjI,EAAgB6M,QAAQP,GAAS,GAC3EA,EAAOhE,mBAAmBL,OAAO0E,EAAO,GACxCpB,GAAa,KAGrBa,EAAyBf,WAAa,SAAUW,GAC5C,IAAIxB,EAAQhK,KACR8L,EAASL,EAAYpI,IAAImI,GAC7BM,EAAOhE,mBAAmBwE,QAAQzF,SAAQ,SAAUI,GAAM,OAAO+C,EAAMkC,UAAUV,EAAgBvE,EAAGpG,WACpGiL,EAAO/E,cAAcU,OAAO,EAAGqE,EAAO/E,cAAc1F,SAEjDuK,EAjCqB,GCX5BW,EAAkB,WAClB,SAASA,EAAejF,GACpB,GAAyB,IAArBkF,UAAUnL,OACV,MAAM,IAAIoL,UAAU,kFAExB,GAAwB,oBAAbnF,EACP,MAAM,IAAImF,UAAU,iGAExBb,EAAyBC,QAAQ7L,KAAMsH,GA0B3C,OAxBAiF,EAAehM,UAAUyI,QAAU,SAAUnI,EAAQkL,GACjD,GAAyB,IAArBS,UAAUnL,OACV,MAAM,IAAIoL,UAAU,6FAExB,IAAKnL,EAAUT,GACX,MAAM,IAAI4L,UAAU,wFAExBb,EAAyB5C,QAAQhJ,KAAMa,EAAQkL,IAEnDQ,EAAehM,UAAU2L,UAAY,SAAUrL,GAC3C,GAAyB,IAArB2L,UAAUnL,OACV,MAAM,IAAIoL,UAAU,+FAExB,IAAKnL,EAAUT,GACX,MAAM,IAAI4L,UAAU,0FAExBb,EAAyBM,UAAUlM,KAAMa,IAE7C0L,EAAehM,UAAUsK,WAAa,WAClCe,EAAyBf,WAAW7K,OAExCuM,EAAeG,SAAW,WACtB,MAAO,kDAEJH,EAlCW,I,gFCFP,SAASI,EAAIC,EAAQC,GAClC,IAAIF,EACJ,QAAgBG,IAAZD,EAAuB,qBACLD,GADK,IACzB,2BAA4B,KAAjBG,EAAiB,QACb,MAATA,IACIJ,EAAMI,QAAkBD,IAARH,GAAqBI,GAASA,KACpDJ,EAAMI,IAJe,mCAOpB,CACL,IADK,EACDZ,GAAS,EADR,cAEaS,GAFb,IAEL,2BAA0B,KAAjBG,EAAiB,QACyB,OAA5CA,EAAQF,EAAQE,IAASZ,EAAOS,MAC7BD,EAAMI,QAAkBD,IAARH,GAAqBI,GAASA,KACpDJ,EAAMI,IALL,+BASP,OAAOJ,I,qBCdA,SAAUK,GAAW,aAE9B,SAASC,EAAgB1L,EAAK2L,EAAKH,GAYjC,OAXIG,KAAO3L,EACTlB,OAAO8M,eAAe5L,EAAK2L,EAAK,CAC9BH,MAAOA,EACPK,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZ/L,EAAI2L,GAAOH,EAGNxL,EAGT,SAASgM,IAeP,OAdAA,EAAWlN,OAAOmN,QAAU,SAAU3M,GACpC,IAAK,IAAI8K,EAAI,EAAGA,EAAIa,UAAUnL,OAAQsK,IAAK,CACzC,IAAI8B,EAASjB,UAAUb,GAEvB,IAAK,IAAIuB,KAAOO,EACVpN,OAAOE,UAAUmN,eAAenG,KAAKkG,EAAQP,KAC/CrM,EAAOqM,GAAOO,EAAOP,IAK3B,OAAOrM,IAGO8M,MAAM3N,KAAMwM,WAG9B,SAASoB,EAAQC,EAAQC,GACvB,IAAIC,EAAO1N,OAAO0N,KAAKF,GAEvB,GAAIxN,OAAO2N,sBAAuB,CAChC,IAAIC,EAAU5N,OAAO2N,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAO9N,OAAO+N,yBAAyBP,EAAQM,GAAKf,eAEtDW,EAAK3G,KAAKuG,MAAMI,EAAME,GAGxB,OAAOF,EAiCT,SAASM,EAAYC,EAAQC,GAC3B,IAAIrO,EAAO,GACPE,EAAQ,GA6BZ,OAJIkO,EAAOjN,QAvBX,SAASmN,EAAmBF,EAAQC,GAClC,GAAsB,IAAlBD,EAAOjN,OACTnB,EAAKkH,KAAKkH,EAAO,IACjBlO,EAAMgH,KAAKkH,EAAO,QACb,CAGL,IAFA,IAAIG,EAAYC,MAAMJ,EAAOjN,OAAS,GAE7BsK,EAAI,EAAGA,EAAI8C,EAAUpN,OAAQsK,IAC1B,IAANA,GACFzL,EAAKkH,KAAKkH,EAAO,IAGf3C,IAAM8C,EAAUpN,OAAS,GAC3BjB,EAAMgH,KAAKkH,EAAO3C,EAAI,IAGxB8C,EAAU9C,GAAK,EAAE,EAAI4C,GAAKD,EAAO3C,GAAG,GAAK4C,EAAID,EAAO3C,EAAI,GAAG,IAAK,EAAI4C,GAAKD,EAAO3C,GAAG,GAAK4C,EAAID,EAAO3C,EAAI,GAAG,IAG5G6C,EAAmBC,EAAWF,IAKhCC,CAAmBF,EAAQC,GAGtB,CACLrO,KAAMA,EACNE,MAAOA,EAAMuO,WAYjB,SAASC,EAAgBN,GACvB,IAAIO,EAAU,GA0Bd,OAxBsB,IAAlBP,EAAOjN,SACTwN,EAAQC,GAAKR,EAAO,GAAG,GACvBO,EAAQE,GAAKT,EAAO,GAAG,IAGrBA,EAAOjN,QAAU,IACnBwN,EAAQG,GAAKV,EAAO,GAAG,GACvBO,EAAQI,GAAKX,EAAO,GAAG,IAGzBO,EAAQjP,EAAI0O,EAAOA,EAAOjN,OAAS,GAAG,GACtCwN,EAAQhP,EAAIyO,EAAOA,EAAOjN,OAAS,GAAG,GAEhB,IAAlBiN,EAAOjN,OAETwN,EAAQzD,KAAO,IACY,IAAlBkD,EAAOjN,OAEhBwN,EAAQzD,KAAO,IAGfyD,EAAQzD,KAAO,IAGVyD,EAoDT,SAASK,EAAWC,EAAcC,EAAYC,GAC5C,IAAIf,EAAS,CAAC,CAACa,EAAavP,EAAGuP,EAAatP,IAW5C,OATqB,MAAjBuP,EAAWJ,IACbV,EAAOlH,KAAK,CAACgI,EAAWJ,GAAII,EAAWH,KAGpB,MAAjBG,EAAWN,IACbR,EAAOlH,KAAK,CAACgI,EAAWN,GAAIM,EAAWL,KAGzCT,EAAOlH,KAAK,CAACgI,EAAWxP,EAAGwP,EAAWvP,IApDxC,SAA4ByO,EAAQe,GAmBlC,IAjBA,IAAIC,EAAW,GACXC,EAAiBjB,EACjBkB,EAAa,GAHjBH,EAAeA,GAAgB,GAkBtB1D,EAAI,EAAGA,EAAI0D,EAAe,EAAG1D,IAAK,CACzC,IACI8D,EAAQpB,EAAYkB,EADRC,GAAc,EAAIA,EAAa7D,IAE/C2D,EAASlI,KAAKqI,EAAMvP,MACpBqP,EAAiBE,EAAMrP,MAKzB,OADAkP,EAASlI,KAAKmI,GACPD,EAyBAI,CAAmBpB,EAAQe,GAAcM,IAAIf,GAGtD,IAAIgB,EAAoB,oCAKpBC,EAAU,CACZC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KACJC,EAAG,CAAC,KACJC,EAAG,CAAC,KAAM,KAAM,KAAM,KAAM,IAAK,KACjCC,EAAG,CAAC,KAAM,KAAM,IAAK,KACrBC,EAAG,CAAC,KAAM,KAAM,IAAK,KACrBC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KAAM,KAAM,gBAAiB,eAAgB,YAAa,IAAK,MAOrE,SAASC,EAAclP,EAAQ0L,GAG7B,IAFA,IAAIyD,EAAQ9B,MAAMrN,GAETsK,EAAI,EAAGA,EAAItK,EAAQsK,IAC1B6E,EAAM7E,GAAKoB,EAGb,OAAOyD,EAST,SAASC,EAAgB5B,GACvB,MAAO,GAAG6B,OAAO7B,EAAQzD,MAAMsF,OAAOb,EAAQhB,EAAQzD,MAAMuE,KAAI,SAAUgB,GACxE,OAAO9B,EAAQ8B,MACdC,KAAK,MAiHV,SAASC,EAAOC,EAAkBC,EAAmBC,GAGnD,IAAIC,EAAsBH,EAAiBzP,OAAS,EAEhD6P,EAAuBH,EAAkB1P,OAAS,EAElD8P,EAAeF,EAAsBC,EAuCrCE,EAlCwBb,EAAcW,GAAsBG,QAAO,SAAUC,EAAOC,EAAG5F,GACzF,IAAI6F,EAAc5L,KAAK6L,MAAMN,EAAexF,GAE5C,GAAIqF,GAAkBQ,EAAcV,EAAiBzP,OAAS,GAAK2P,EAAeF,EAAiBU,GAAcV,EAAiBU,EAAc,IAAK,CAInJ,IAAIE,EAAoBP,EAAexF,EAAI,EAAI,GAE3C2F,EAAME,KAMJE,EACEF,EAAc,EAChBA,GAAe,EACNA,EAAcV,EAAiBzP,OAAS,IACjDmQ,GAAe,GAGRA,EAAcV,EAAiBzP,OAAS,EACjDmQ,GAAe,EACNA,EAAc,IACvBA,GAAe,IAMrB,OADAF,EAAME,IAAgBF,EAAME,IAAgB,GAAK,EAC1CF,IACN,IAEkCD,QAAO,SAAUD,EAAU/B,EAAc1D,GAE5E,GAAIA,IAAMmF,EAAiBzP,OAAS,EAAG,CACrC,IAAIsQ,EAAoBpB,EAAclB,EAAc9B,EAAS,GAAIuD,EAAiBA,EAAiBzP,OAAS,KAQ5G,MANkC,MAA9BsQ,EAAkB,GAAGvG,MACvBuG,EAAkB9K,SAAQ,SAAU0K,GAClCA,EAAEnG,KAAO,OAINgG,EAASV,OAAOiB,GAIzB,OAAOP,EAASV,OA/FpB,SAAsBvB,EAAcC,EAAYC,GAC9C,IAAIC,EAAW,GAEf,GAAwB,MAApBF,EAAWhE,MAAoC,MAApBgE,EAAWhE,MAAoC,MAApBgE,EAAWhE,KACnEkE,EAAWA,EAASoB,OAAOxB,EAAWC,EAAcC,EAAYC,QAC3D,CACL,IAAIuC,EAAcrE,EAAS,GAAI4B,GAGN,MAArByC,EAAYxG,OACdwG,EAAYxG,KAAO,MAGrBkE,EAAWA,EAASoB,OAAOH,EAAclB,EAAe,GAAGM,KAAI,WAC7D,OAAOiC,OAEAxK,KAAKgI,GAGhB,OAAOE,EA4EkBuC,CAAaf,EAAiBnF,GAAImF,EAAiBnF,EAAI,GAAI0D,MACjF,IAGH,OADA+B,EAASU,QAAQhB,EAAiB,IAC3BM,EAUT,SAASW,EAAaR,GAQpB,IANA,IAEIS,EACAnD,EAHAoD,GAAUV,GAAK,IAAIW,MAAMtC,IAAsB,GAC/CuC,EAAW,GAKNxG,EAAI,EAAGA,EAAIsG,EAAO5Q,SAAUsK,EAGnC,GAFAqG,EAAcnC,EAAQoC,EAAOtG,IAEZ,CACfkD,EAAU,CACRzD,KAAM6G,EAAOtG,IAGf,IAAK,IAAIyG,EAAI,EAAGA,EAAIJ,EAAY3Q,SAAU+Q,EACxCvD,EAAQmD,EAAYI,KAAOH,EAAOtG,EAAIyG,EAAI,GAK5CzG,GAAKqG,EAAY3Q,OACjB8Q,EAAS/K,KAAKyH,GAIlB,OAAOsD,EA9OT9R,OAAO0N,KAAK8B,GAAShJ,SAAQ,SAAUqG,GACrC2C,EAAQ3C,EAAImF,eAAiBxC,EAAQ3C,MAoXvCF,EAAQsF,gBAtHR,SAAyBF,EAAGG,EAAGvB,GAC7B,IAAIwB,EAAYT,EAAaK,GACzBK,EAAYV,EAAaQ,GAE7B,IAAKC,EAAUnR,SAAWoR,EAAUpR,OAClC,OAAO,WACL,MAAO,IAMNmR,EAAUnR,OAGHoR,EAAUpR,QACpBoR,EAAUrL,KAAKoL,EAAU,IAHzBA,EAAUpL,KAAKqL,EAAU,IASD,IAFF7M,KAAK8M,IAAID,EAAUpR,OAASmR,EAAUnR,UAIxDoR,EAAUpR,OAASmR,EAAUnR,OAC/BmR,EAAY3B,EAAO2B,EAAWC,EAAWzB,GAChCyB,EAAUpR,OAASmR,EAAUnR,SACtCoR,EAAY5B,EAAO4B,EAAWD,EAAWxB,KAU7C,IAAI2B,GAJJH,EAAYA,EAAU7C,KAAI,SAAUiD,EAAUjH,GAC5C,OAlPJ,SAA2BiH,EAAUC,GACnC,IAAIC,EAAgB,CAClB9D,GAAI,IACJC,GAAI,IACJH,GAAI,IACJC,GAAI,KAEFgE,EAAgB,CAAC,gBAAiB,eAAgB,aAEtD,GAAIH,EAASxH,OAASyH,EAASzH,MAAwC,MAAhCyH,EAASzH,KAAK4H,cAAuB,CAC1E,IAAIC,EAAa,GACjB5S,OAAO0N,KAAK8E,GAAUhM,SAAQ,SAAUqM,GACtC,IAAIC,EAASN,EAASK,GAElBE,EAASR,EAASM,QAEPpG,IAAXsG,IACEL,EAAcM,SAASH,GACzBE,EAASD,QAGMrG,IAAXsG,GAAwBN,EAAcI,KACxCE,EAASR,EAASE,EAAcI,UAInBpG,IAAXsG,IACFA,EAAS,KAKfH,EAAWC,GAAQE,KAGrBH,EAAW7H,KAAOyH,EAASzH,KAC3BwH,EAAWK,EAGb,OAAOL,EA2MEU,CAAkBV,EAAUH,EAAU9G,QAGVgE,KAAI,SAAUiD,GACjD,OA/dJ,SAAwB/R,GACtB,IAAK,IAAI8K,EAAI,EAAGA,EAAIa,UAAUnL,OAAQsK,IAAK,CACzC,IAAI8B,EAAyB,MAAhBjB,UAAUb,GAAaa,UAAUb,GAAK,GAE/CA,EAAI,EACNiC,EAAQvN,OAAOoN,IAAS,GAAM5G,SAAQ,SAAUqG,GAC9CD,EAAgBpM,EAAQqM,EAAKO,EAAOP,OAE7B7M,OAAOkT,0BAChBlT,OAAOmT,iBAAiB3S,EAAQR,OAAOkT,0BAA0B9F,IAEjEG,EAAQvN,OAAOoN,IAAS5G,SAAQ,SAAUqG,GACxC7M,OAAO8M,eAAetM,EAAQqM,EAAK7M,OAAO+N,yBAAyBX,EAAQP,OAKjF,OAAOrM,EA8cE4S,CAAe,GAAIb,MAExBc,GAAa,MAALtB,GAAiC,MAApBA,EAAEA,EAAE/Q,OAAS,MAAqB,MAALkR,GAAiC,MAApBA,EAAEA,EAAElR,OAAS,IAChF,OAAO,SAA0BkN,GAE/B,GAAU,IAANA,EACF,OAAY,MAALgE,EAAY,GAAKA,EAK1B,GAAIhE,EAAI,EACN,IAAK,IAAI5C,EAAI,EAAGA,EAAIgH,EAAqBtR,SAAUsK,EAAG,CACpD,IAAIiH,EAAWJ,EAAU7G,GACrBkH,EAAWJ,EAAU9G,GACrBgI,EAAsBhB,EAAqBhH,GAC3CiI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBhH,EAErB,IACE,IAAK,IAAsEiH,EAAlEC,EAAYnE,EAAQ8D,EAAoBvI,MAAM6I,OAAOC,cAAsBN,GAA6BG,EAAQC,EAAUG,QAAQC,MAAOR,GAA4B,EAAM,CAClL,IAAIS,EAAMN,EAAMhH,MAChB4G,EAAoBU,IAAQ,EAAI9F,GAAKqE,EAASyB,GAAO9F,EAAIsE,EAASwB,GAEtD,iBAARA,GAAkC,cAARA,IAC5BV,EAAoBU,GAAOzO,KAAKC,MAAM8N,EAAoBU,MAG9D,MAAOC,GACPT,GAAoB,EACpBC,EAAiBQ,EAXnB,QAaE,IACOV,GAAoD,MAAvBI,EAAS,QACzCA,EAAS,SAFb,QAKE,GAAIH,EACF,MAAMC,IAQhB,IAAIS,EAAqB,GACrBC,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkB5H,EAEtB,IACE,IAAK,IAA0D6H,EAAtDC,EAAajC,EAAqBsB,OAAOC,cAAuBM,GAA8BG,EAASC,EAAWT,QAAQC,MAAOI,GAA6B,EAErKD,GAAsB9D,EADKkE,EAAO5H,OAGpC,MAAOuH,GACPG,GAAqB,EACrBC,EAAkBJ,EAPpB,QASE,IACOE,GAAsD,MAAxBI,EAAU,QAC3CA,EAAU,SAFd,QAKE,GAAIH,EACF,MAAMC,GASZ,OAJIhB,IACFa,GAAsB,KAGjBA,IAMXlU,OAAO8M,eAAeH,EAAS,aAAc,CAAED,OAAO,IArmBS8H,CAAQ7H,I,8CCExD,aAAS3G,GACtB,IAAI6B,ECFS,WAEb,IADA,IAAqBuF,EAAjBqH,EAAU5M,IACPuF,EAASqH,EAAQC,aAAaD,EAAUrH,EAC/C,OAAOqH,EDDKC,GAEZ,OADI7M,EAAM8M,iBAAgB9M,EAAQA,EAAM8M,eAAe,IEL1C,SAAS3O,EAAM6B,GAC5B,IAAIzE,EAAM4C,EAAK3C,iBAAmB2C,EAElC,GAAI5C,EAAIwR,eAAgB,CACtB,IAAIC,EAAQzR,EAAIwR,iBAGhB,OAFAC,EAAMtV,EAAIsI,EAAMiN,QAASD,EAAMrV,EAAIqI,EAAMkN,QAElC,EADPF,EAAQA,EAAMG,gBAAgBhP,EAAKiP,eAAeC,YACpC3V,EAAGsV,EAAMrV,GAGzB,IAAI2V,EAAOnP,EAAKoP,wBAChB,MAAO,CAACvN,EAAMiN,QAAUK,EAAKtV,KAAOmG,EAAKqP,WAAYxN,EAAMkN,QAAUI,EAAKvV,IAAMoG,EAAKsP,WFL9ET,CAAM7O,EAAM6B,K,0GGFN,SAAS0N,IACtB,IAKIC,EALAC,EAAK,EACL9G,EAAK,EACLhE,EAAI,EACJ+K,EAAS,CAAC,IACVC,EAAQ,CAAC,EAAG,GAGhB,SAASC,EAAMrW,GACb,OAAOA,GAAKA,EAAIoW,EAAME,YAAOH,EAAQnW,EAAG,EAAGoL,IAAM6K,EAGnD,SAASM,IACP,IAAIxK,GAAK,EAET,IADAoK,EAAS,IAAIrH,MAAM1D,KACVW,EAAIX,GAAG+K,EAAOpK,KAAOA,EAAI,GAAKqD,GAAMrD,EAAIX,GAAK8K,IAAO9K,EAAI,GACjE,OAAOiL,EAkCT,OA/BAA,EAAMF,OAAS,SAASK,GAAG,QACzB,OAAO5J,UAAUnL,QAAU,EAAW+U,EAAX,mBAACN,EAAD,KAAK9G,EAAL,KAAc8G,GAAMA,EAAI9G,GAAMA,EAAImH,KAAa,CAACL,EAAI9G,IAGjFiH,EAAMD,MAAQ,SAASI,GACrB,OAAO5J,UAAUnL,QAAU2J,GAAKgL,EAAQtH,MAAM2H,KAAKD,IAAI/U,OAAS,EAAG8U,KAAaH,EAAM1J,SAGxF2J,EAAMK,aAAe,SAASzW,GAC5B,IAAI8L,EAAIqK,EAAM3J,QAAQxM,GACtB,OAAO8L,EAAI,EAAI,CAAC4K,IAAKA,KACf5K,EAAI,EAAI,CAACmK,EAAIC,EAAO,IACpBpK,GAAKX,EAAI,CAAC+K,EAAO/K,EAAI,GAAIgE,GACzB,CAAC+G,EAAOpK,EAAI,GAAIoK,EAAOpK,KAG/BsK,EAAMJ,QAAU,SAASO,GACvB,OAAO5J,UAAUnL,QAAUwU,EAAUO,EAAGH,GAASA,GAGnDA,EAAMO,WAAa,WACjB,OAAOT,EAAOzJ,SAGhB2J,EAAMQ,KAAO,WACX,OAAOb,IACFG,OAAO,CAACD,EAAI9G,IACZgH,MAAMA,GACNH,QAAQA,IAGRa,IAAU/I,MAAMgJ,YAAUV,GAAQzJ","file":"static/js/24.3ba06eb9.chunk.js","sourcesContent":["var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = [boxes.borderBoxSize];\n        this.contentBoxSize = [boxes.contentBoxSize];\n        this.devicePixelContentBoxSize = [boxes.devicePixelContentBoxSize];\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * de Casteljau's algorithm for drawing and splitting bezier curves.\n * Inspired by https://pomax.github.io/bezierinfo/\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   The original segment to split.\n * @param {Number} t Where to split the curve (value between [0, 1])\n * @return {Object} An object { left, right } where left is the segment from 0..t and\n *   right is the segment from t..1.\n */\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function decasteljauRecurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var newPoints = Array(points.length - 1);\n\n      for (var i = 0; i < newPoints.length; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === newPoints.length - 1) {\n          right.push(points[i + 1]);\n        }\n\n        newPoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      decasteljauRecurse(newPoints, t);\n    }\n  }\n\n  if (points.length) {\n    decasteljauRecurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n/**\n * Convert segments represented as points back into a command object\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   Represents a segment\n * @return {Object} A command object representing the segment.\n */\n\n\nfunction pointsToCommand(points) {\n  var command = {};\n\n  if (points.length === 4) {\n    command.x2 = points[2][0];\n    command.y2 = points[2][1];\n  }\n\n  if (points.length >= 3) {\n    command.x1 = points[1][0];\n    command.y1 = points[1][1];\n  }\n\n  command.x = points[points.length - 1][0];\n  command.y = points[points.length - 1][1];\n\n  if (points.length === 4) {\n    // start, control1, control2, end\n    command.type = 'C';\n  } else if (points.length === 3) {\n    // start, control, end\n    command.type = 'Q';\n  } else {\n    // start, end\n    command.type = 'L';\n  }\n\n  return command;\n}\n/**\n * Runs de Casteljau's algorithm enough times to produce the desired number of segments.\n *\n * @param {Number[][]} points Array of [x,y] points for de Casteljau (the initial segment to split)\n * @param {Number} segmentCount Number of segments to split the original into\n * @return {Number[][][]} Array of segments\n */\n\n\nfunction splitCurveAsPoints(points, segmentCount) {\n  segmentCount = segmentCount || 2;\n  var segments = [];\n  var remainingCurve = points;\n  var tIncrement = 1 / segmentCount; // x-----x-----x-----x\n  // t=  0.33   0.66   1\n  // x-----o-----------x\n  // r=  0.33\n  //       x-----o-----x\n  // r=         0.5  (0.33 / (1 - 0.33))  === tIncrement / (1 - (tIncrement * (i - 1))\n  // x-----x-----x-----x----x\n  // t=  0.25   0.5   0.75  1\n  // x-----o----------------x\n  // r=  0.25\n  //       x-----o----------x\n  // r=         0.33  (0.25 / (1 - 0.25))\n  //             x-----o----x\n  // r=         0.5  (0.25 / (1 - 0.5))\n\n  for (var i = 0; i < segmentCount - 1; i++) {\n    var tRelative = tIncrement / (1 - tIncrement * i);\n    var split = decasteljau(remainingCurve, tRelative);\n    segments.push(split.left);\n    remainingCurve = split.right;\n  } // last segment is just to the end from the last point\n\n\n  segments.push(remainingCurve);\n  return segments;\n}\n/**\n * Convert command objects to arrays of points, run de Casteljau's algorithm on it\n * to split into to the desired number of segments.\n *\n * @param {Object} commandStart The start command object\n * @param {Object} commandEnd The end command object\n * @param {Number} segmentCount The number of segments to create\n * @return {Object[]} An array of commands representing the segments in sequence\n */\n\n\nfunction splitCurve(commandStart, commandEnd, segmentCount) {\n  var points = [[commandStart.x, commandStart.y]];\n\n  if (commandEnd.x1 != null) {\n    points.push([commandEnd.x1, commandEnd.y1]);\n  }\n\n  if (commandEnd.x2 != null) {\n    points.push([commandEnd.x2, commandEnd.y2]);\n  }\n\n  points.push([commandEnd.x, commandEnd.y]);\n  return splitCurveAsPoints(points, segmentCount).map(pointsToCommand);\n}\n\nvar commandTokenRegex = /[MLCSTQAHVmlcstqahv]|-?[\\d.e+-]+/g;\n/**\n * List of params for each command type in a path `d` attribute\n */\n\nvar typeMap = {\n  M: ['x', 'y'],\n  L: ['x', 'y'],\n  H: ['x'],\n  V: ['y'],\n  C: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  S: ['x2', 'y2', 'x', 'y'],\n  Q: ['x1', 'y1', 'x', 'y'],\n  T: ['x', 'y'],\n  A: ['rx', 'ry', 'xAxisRotation', 'largeArcFlag', 'sweepFlag', 'x', 'y']\n}; // Add lower case entries too matching uppercase (e.g. 'm' == 'M')\n\nObject.keys(typeMap).forEach(function (key) {\n  typeMap[key.toLowerCase()] = typeMap[key];\n});\n\nfunction arrayOfLength(length, value) {\n  var array = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    array[i] = value;\n  }\n\n  return array;\n}\n/**\n * Converts a command object to a string to be used in a `d` attribute\n * @param {Object} command A command object\n * @return {String} The string for the `d` attribute\n */\n\n\nfunction commandToString(command) {\n  return \"\".concat(command.type).concat(typeMap[command.type].map(function (p) {\n    return command[p];\n  }).join(','));\n}\n/**\n * Converts command A to have the same type as command B.\n *\n * e.g., L0,5 -> C0,5,0,5,0,5\n *\n * Uses these rules:\n * x1 <- x\n * x2 <- x\n * y1 <- y\n * y2 <- y\n * rx <- 0\n * ry <- 0\n * xAxisRotation <- read from B\n * largeArcFlag <- read from B\n * sweepflag <- read from B\n *\n * @param {Object} aCommand Command object from path `d` attribute\n * @param {Object} bCommand Command object from path `d` attribute to match against\n * @return {Object} aCommand converted to type of bCommand\n */\n\n\nfunction convertToSameType(aCommand, bCommand) {\n  var conversionMap = {\n    x1: 'x',\n    y1: 'y',\n    x2: 'x',\n    y2: 'y'\n  };\n  var readFromBKeys = ['xAxisRotation', 'largeArcFlag', 'sweepFlag']; // convert (but ignore M types)\n\n  if (aCommand.type !== bCommand.type && bCommand.type.toUpperCase() !== 'M') {\n    var aConverted = {};\n    Object.keys(bCommand).forEach(function (bKey) {\n      var bValue = bCommand[bKey]; // first read from the A command\n\n      var aValue = aCommand[bKey]; // if it is one of these values, read from B no matter what\n\n      if (aValue === undefined) {\n        if (readFromBKeys.includes(bKey)) {\n          aValue = bValue;\n        } else {\n          // if it wasn't in the A command, see if an equivalent was\n          if (aValue === undefined && conversionMap[bKey]) {\n            aValue = aCommand[conversionMap[bKey]];\n          } // if it doesn't have a converted value, use 0\n\n\n          if (aValue === undefined) {\n            aValue = 0;\n          }\n        }\n      }\n\n      aConverted[bKey] = aValue;\n    }); // update the type to match B\n\n    aConverted.type = bCommand.type;\n    aCommand = aConverted;\n  }\n\n  return aCommand;\n}\n/**\n * Interpolate between command objects commandStart and commandEnd segmentCount times.\n * If the types are L, Q, or C then the curves are split as per de Casteljau's algorithm.\n * Otherwise we just copy commandStart segmentCount - 1 times, finally ending with commandEnd.\n *\n * @param {Object} commandStart Command object at the beginning of the segment\n * @param {Object} commandEnd Command object at the end of the segment\n * @param {Number} segmentCount The number of segments to split this into. If only 1\n *   Then [commandEnd] is returned.\n * @return {Object[]} Array of ~segmentCount command objects between commandStart and\n *   commandEnd. (Can be segmentCount+1 objects if commandStart is type M).\n */\n\n\nfunction splitSegment(commandStart, commandEnd, segmentCount) {\n  var segments = []; // line, quadratic bezier, or cubic bezier\n\n  if (commandEnd.type === 'L' || commandEnd.type === 'Q' || commandEnd.type === 'C') {\n    segments = segments.concat(splitCurve(commandStart, commandEnd, segmentCount)); // general case - just copy the same point\n  } else {\n    var copyCommand = _extends({}, commandStart); // convert M to L\n\n\n    if (copyCommand.type === 'M') {\n      copyCommand.type = 'L';\n    }\n\n    segments = segments.concat(arrayOfLength(segmentCount - 1).map(function () {\n      return copyCommand;\n    }));\n    segments.push(commandEnd);\n  }\n\n  return segments;\n}\n/**\n * Extends an array of commandsToExtend to the length of the referenceCommands by\n * splitting segments until the number of commands match. Ensures all the actual\n * points of commandsToExtend are in the extended array.\n *\n * @param {Object[]} commandsToExtend The command object array to extend\n * @param {Object[]} referenceCommands The command object array to match in length\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @return {Object[]} The extended commandsToExtend array\n */\n\n\nfunction extend(commandsToExtend, referenceCommands, excludeSegment) {\n  // compute insertion points:\n  // number of segments in the path to extend\n  var numSegmentsToExtend = commandsToExtend.length - 1; // number of segments in the reference path.\n\n  var numReferenceSegments = referenceCommands.length - 1; // this value is always between [0, 1].\n\n  var segmentRatio = numSegmentsToExtend / numReferenceSegments; // create a map, mapping segments in referenceCommands to how many points\n  // should be added in that segment (should always be >= 1 since we need each\n  // point itself).\n  // 0 = segment 0-1, 1 = segment 1-2, n-1 = last vertex\n\n  var countPointsPerSegment = arrayOfLength(numReferenceSegments).reduce(function (accum, d, i) {\n    var insertIndex = Math.floor(segmentRatio * i); // handle excluding segments\n\n    if (excludeSegment && insertIndex < commandsToExtend.length - 1 && excludeSegment(commandsToExtend[insertIndex], commandsToExtend[insertIndex + 1])) {\n      // set the insertIndex to the segment that this point should be added to:\n      // round the insertIndex essentially so we split half and half on\n      // neighbouring segments. hence the segmentRatio * i < 0.5\n      var addToPriorSegment = segmentRatio * i % 1 < 0.5; // only skip segment if we already have 1 point in it (can't entirely remove a segment)\n\n      if (accum[insertIndex]) {\n        // TODO - Note this is a naive algorithm that should work for most d3-area use cases\n        // but if two adjacent segments are supposed to be skipped, this will not perform as\n        // expected. Could be updated to search for nearest segment to place the point in, but\n        // will only do that if necessary.\n        // add to the prior segment\n        if (addToPriorSegment) {\n          if (insertIndex > 0) {\n            insertIndex -= 1; // not possible to add to previous so adding to next\n          } else if (insertIndex < commandsToExtend.length - 1) {\n            insertIndex += 1;\n          } // add to next segment\n\n        } else if (insertIndex < commandsToExtend.length - 1) {\n          insertIndex += 1; // not possible to add to next so adding to previous\n        } else if (insertIndex > 0) {\n          insertIndex -= 1;\n        }\n      }\n    }\n\n    accum[insertIndex] = (accum[insertIndex] || 0) + 1;\n    return accum;\n  }, []); // extend each segment to have the correct number of points for a smooth interpolation\n\n  var extended = countPointsPerSegment.reduce(function (extended, segmentCount, i) {\n    // if last command, just add `segmentCount` number of times\n    if (i === commandsToExtend.length - 1) {\n      var lastCommandCopies = arrayOfLength(segmentCount, _extends({}, commandsToExtend[commandsToExtend.length - 1])); // convert M to L\n\n      if (lastCommandCopies[0].type === 'M') {\n        lastCommandCopies.forEach(function (d) {\n          d.type = 'L';\n        });\n      }\n\n      return extended.concat(lastCommandCopies);\n    } // otherwise, split the segment segmentCount times.\n\n\n    return extended.concat(splitSegment(commandsToExtend[i], commandsToExtend[i + 1], segmentCount));\n  }, []); // add in the very first point since splitSegment only adds in the ones after it\n\n  extended.unshift(commandsToExtend[0]);\n  return extended;\n}\n/**\n * Takes a path `d` string and converts it into an array of command\n * objects. Drops the `Z` character.\n *\n * @param {String|null} d A path `d` string\n */\n\n\nfunction makeCommands(d) {\n  // split into valid tokens\n  var tokens = (d || '').match(commandTokenRegex) || [];\n  var commands = [];\n  var commandArgs;\n  var command; // iterate over each token, checking if we are at a new command\n  // by presence in the typeMap\n\n  for (var i = 0; i < tokens.length; ++i) {\n    commandArgs = typeMap[tokens[i]]; // new command found:\n\n    if (commandArgs) {\n      command = {\n        type: tokens[i]\n      }; // add each of the expected args for this command:\n\n      for (var a = 0; a < commandArgs.length; ++a) {\n        command[commandArgs[a]] = +tokens[i + a + 1];\n      } // need to increment our token index appropriately since\n      // we consumed token args\n\n\n      i += commandArgs.length;\n      commands.push(command);\n    }\n  }\n\n  return commands;\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` character in paths unless both A and B end with it.\n *\n * @param {String} a The `d` attribute for a path\n * @param {String} b The `d` attribute for a path\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to a path `d` string.\n */\n\n\nfunction interpolatePath(a, b, excludeSegment) {\n  var aCommands = makeCommands(a);\n  var bCommands = makeCommands(b);\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return '';\n    };\n  } // if A is empty, treat it as if it used to contain just the first point\n  // of B. This makes it so the line extends out of from that first point.\n\n\n  if (!aCommands.length) {\n    aCommands.push(bCommands[0]); // otherwise if B is empty, treat it as if it contains the first point\n    // of A. This makes it so the line retracts into the first point.\n  } else if (!bCommands.length) {\n    bCommands.push(aCommands[0]);\n  } // extend to match equal size\n\n\n  var numPointsToExtend = Math.abs(bCommands.length - aCommands.length);\n\n  if (numPointsToExtend !== 0) {\n    // B has more points than A, so add points to A before interpolating\n    if (bCommands.length > aCommands.length) {\n      aCommands = extend(aCommands, bCommands, excludeSegment); // else if A has more points than B, add more points to B\n    } else if (bCommands.length < aCommands.length) {\n      bCommands = extend(bCommands, aCommands, excludeSegment);\n    }\n  } // commands have same length now.\n  // convert commands in A to the same type as those in B\n\n\n  aCommands = aCommands.map(function (aCommand, i) {\n    return convertToSameType(aCommand, bCommands[i]);\n  }); // create mutable interpolated command objects\n\n  var interpolatedCommands = aCommands.map(function (aCommand) {\n    return _objectSpread2({}, aCommand);\n  });\n  var addZ = (a == null || a[a.length - 1] === 'Z') && (b == null || b[b.length - 1] === 'Z');\n  return function pathInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return b == null ? '' : b;\n    } // interpolate the commands using the mutable interpolated command objs\n    // we can skip at t=0 since we copied aCommands to begin\n\n\n    if (t > 0) {\n      for (var i = 0; i < interpolatedCommands.length; ++i) {\n        var aCommand = aCommands[i];\n        var bCommand = bCommands[i];\n        var interpolatedCommand = interpolatedCommands[i];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = typeMap[interpolatedCommand.type][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var arg = _step.value;\n            interpolatedCommand[arg] = (1 - t) * aCommand[arg] + t * bCommand[arg]; // do not use floats for flags (#27), round to integer\n\n            if (arg === 'largeArcFlag' || arg === 'sweepFlag') {\n              interpolatedCommand[arg] = Math.round(interpolatedCommand[arg]);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    } // convert to a string (fastest concat: https://jsperf.com/join-concat/150)\n\n\n    var interpolatedString = '';\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = interpolatedCommands[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _interpolatedCommand = _step2.value;\n        interpolatedString += commandToString(_interpolatedCommand);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    if (addZ) {\n      interpolatedString += 'Z';\n    }\n\n    return interpolatedString;\n  };\n}\n\nexports.interpolatePath = interpolatePath;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n"],"sourceRoot":""}